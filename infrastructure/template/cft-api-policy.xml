<policies>
  <backend>
    <base/>
  </backend>
  <inbound>
    <base/>
    <choose>
      <when condition="@(context.Request.Headers["X-ARR-ClientCertThumbprint"] == null)">
        <return-response>
          <set-status code="401" />
          <set-body>Missing client certificate.</set-body>
        </return-response>
      </when>
      <when condition="@(!(new string[] {${allowed_certificate_thumbprints}}.Contains(context.Request.Headers[&quot;X-ARR-ClientCertThumbprint&quot;].First().ToUpperInvariant())))">
        <return-response>
          <set-status code="401" />
          <set-body>Invalid client certificate.</set-body>
        </return-response>
      </when>
<!--      <when condition="@(context.Request.Certificate == null || context.Request.Certificate.NotAfter < DateTime.Now || context.Request.Certificate.NotBefore > DateTime.Now || !(new string[] {${allowed_certificate_thumbprints}}.Any(c => c == context.Request.Certificate.Thumbprint)))" >-->
<!--        <return-response>-->
<!--          <set-status code="401" />-->
<!--          <set-body>Invalid client certificate. Please check expiry.</set-body>-->
<!--        </return-response>-->
<!--      </when>-->
    </choose>
  </inbound>
  <outbound>
    <base/>
</outbound>
  <on-error>
    <base/>
  </on-error>
</policies>
