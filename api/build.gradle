plugins {
    id "info.solidsoft.pitest" version '1.3.0'
}
description = 'api module'

apply from: 'liquibase.gradle'

sourceSets {
    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
    }

    task smokeTest(type: Test, description: 'Runs the smoke tests', group: 'Verification') {
        testClassesDirs = sourceSets.smokeTest.output.classesDirs
        classpath = sourceSets.smokeTest.runtimeClasspath
    }

    task functionalTest(type: Test, description: 'Runs the smoke functional', group: 'Verification') {
        testClassesDirs = sourceSets.functionalTest.output.classesDirs
        classpath = sourceSets.functionalTest.runtimeClasspath
    }

}

/*sourceSets {

    smokeTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
    }
    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
    }
}*/

apply plugin: 'idea'
idea {
    module {
        testSourceDirs += project.sourceSets.smokeTest.java.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.resources.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.resources.srcDirs
    }
}

def versions = [
        pitest: '1.3.2',
        gradlePitest: '1.3.0',
        sonarPitest: '0.5'
]

sonarqube {
    /*properties {
        property "sonar.host.url", "https://sonar.reform.hmcts.net/"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }*/


    properties {
        property "sonar.host.url", "https://sonar.reform.hmcts.net/"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/test.exec"
        property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
        //property "sonar.exclusions", sonarExclusions.join(", ")
        //property "sonar.test.exclusions", sonarExclusions.join(", ")
        //property "sonar.coverage.exclusions", sonarExclusions.join(", ")
        property "sonar.pitest.mode", "reuseReport"

    }
}


configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group in ['com.fasterxml.jackson.core', 'com.fasterxml.jackson.module', 'com.fasterxml.jackson.datatype']) {
                details.useVersion '2.10.1'
            }

            if (details.requested.name == 'jackson-databind') {
                details.useVersion '2.10.2'
            }
        }
    }
}

def javaLoggingVersion = '5.1.1'

dependencies {
    compile project(':fees-register-model')
    compile project(':fees-register-api-contract')
    compile (group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.2') {
        exclude(module: 'java-logging-spring')
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.9'
    compile (group: 'org.postgresql', name: 'postgresql', version: '42.2.13') {
        exclude(module: 'commons-logging')
        exclude(module: 'slf4j-simple')
    }
    compile group: 'org.liquibase', name: 'liquibase-core', version: '3.7.0'
    compile group: 'uk.gov.hmcts.reform', name: 'logging', version: javaLoggingVersion
    compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: javaLoggingVersion

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.0'

    compile group: 'uk.gov.hmcts.reform', name: 'health-spring-boot-starter', version: '0.0.3'

    runtime group: 'org.springframework.boot', name: 'spring-boot-devtools'

    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
        exclude(module: 'commons-logging')
    }
    testCompile group: 'org.springframework.security', name: 'spring-security-test', version: '5.2.1.RELEASE'
    testCompile group: 'org.hsqldb', name: 'hsqldb', version: '2.3.5'
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.7'

    testCompile group: 'org.projectlombok', name: 'lombok', version: '1.18.10'

    functionalTestAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
    smokeTestAnnotationProcessor 'org.projectlombok:lombok:1.18.10'

    testCompile 'io.github.openfeign:feign-jackson:9.7.0'

    // smoke
    smokeTestCompile sourceSets.test.runtimeClasspath

    // functional
    functionalTestCompile sourceSets.test.runtimeClasspath

    compile group: 'org.pitest', name: 'pitest', version: '1.3.2'
    compile 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.4.6'
    compile 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'


//Testing


    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'

    compile("org.springframework.boot:spring-boot-starter-web")
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-json'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version:'2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger2', version:'2.9.0'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.1.2.RELEASE'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.5.11'
    compile group: 'joda-time', name: 'joda-time', version: '2.10.5'
    compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.9'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'com.querydsl', name: 'querydsl-jpa', version:'4.2.2'
    compile group: 'uk.gov.hmcts.reform', name: 'liquibase-core', version:'3.8.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.10.2'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
    compile(group: 'org.postgresql', name: 'postgresql', version: '42.2.13') {
        exclude(module: 'commons-logging')
        exclude(module: 'slf4j-simple')
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    compile group: 'org.codehaus.sonar-plugins', name: 'sonar-pitest-plugin', version: versions.sonarPitest
    compile group: 'uk.gov.hmcts.reform', name: 'logging', version: javaLoggingVersion
    compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: javaLoggingVersion
    compile group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: javaLoggingVersion
    compile group: 'uk.gov.hmcts.reform', name: 'http-proxy-spring-boot-autoconfigure', version:'1.1.0'
    compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version:'5.0'
    compile group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.0.4'
    compile group:'org.apache.poi', name: 'poi', version: '4.1.1'
    compile group:'org.apache.poi', name: 'poi-ooxml', version: '4.1.1'

    compile group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.3'

    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.2.1.RELEASE'
    compile group: 'com.netflix.feign', name: 'feign-jackson', version: '8.18.0'
    compile group: 'org.jboss.aerogear', name: 'aerogear-otp-java', version:'1.0.0'
    compile group: 'uk.gov.hmcts.reform', name: 'health-spring-boot-starter', version: '0.0.3'
    compile group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version:'0.0.4'
    testCompile group: 'com.netflix.feign', name: 'feign-jackson', version: '8.18.0'
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
        exclude(module: 'commons-logging')
    }
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
    functionalTestAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
    smokeTestAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
    //testCompile group: 'org.springframework.security', name: 'spring-security-test', version: '5.0.4.RELEASE'
    testCompile group: 'org.springframework.security', name: 'spring-security-test', version: '5.2.1.RELEASE'

    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.3.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
    testCompile group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.4.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'

    //testCompile group: 'org.testcontainers', name: 'postgresql', version: '1.12.4'
    //testCompile group: 'org.testcontainers', name: 'postgresql', version: '1.14.2'

    //integrationTestCompile group: 'org.testcontainers', name: 'postgresql', version: '1.14.2'

    //testCompile group: 'org.testcontainers', name: 'testcontainers', version: '1.14.2'
    testCompile group: 'org.testcontainers', name: 'postgresql', version: '1.13.0'

    testCompile group: 'com.h2database', name: 'h2'

    // functional
    functionalTestCompile sourceSets.test.runtimeClasspath
    smokeTestCompile sourceSets.test.runtimeClasspath






}

test {
    // Base test class for other tests - has no runnable test methods
    exclude '**/ComponentTestBase*'
}


task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

task smoke(type: Test) {
    description = "Runs Smoke Tests"
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

/*task smokeTest(type: Test, description: 'Runs the smoke tests', group: 'Verification') {
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

task functionalTest(type: Test, description: 'Runs the smoke functional', group: 'Verification') {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}*/

pitest {
    targetClasses = ['uk.gov.hmcts.fees.register.api.*']
    excludedClasses = ['uk.gov.hmcts.fees.register.api.config.*']
    threads = 10
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 50
}
