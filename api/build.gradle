buildscript {
    dependencies {
        classpath "net.serenity-bdd:serenity-single-page-report:4.2.3"
    }
}

plugins {
    id "info.solidsoft.pitest" version '1.15.0'
    id "net.serenity-bdd.serenity-gradle-plugin" version "4.2.1"
}
description = 'api module'

apply from: 'liquibase.gradle'

sourceSets {

    smokeTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
    }
    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integrationTest/java')
        }
    }
    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
    }
    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contractTest/resources')
    }
}

apply plugin: 'idea'
idea {
    module {
        testSourceDirs += project.sourceSets.smokeTest.java.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.resources.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.resources.srcDirs
        testSourceDirs += project.sourceSets.contractTest.java.srcDirs
        testSourceDirs += project.sourceSets.contractTest.resources.srcDirs
    }
}

def versions = [
        gradlePitest: '1.3.0',
        lombok: '1.18.34',
        pitest: '1.9.0',
        sonarPitest: '0.5',
        serenity: '4.2.3',
        serenityCucumber: '4.2.3',
        pact_version    : '4.6.17'
]

sonarqube {
    properties {
        property "sonar.host.url", "https://sonar.reform.hmcts.net/"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

def javaLoggingVersion = '6.0.1'
dependencies {
    implementation project(':fees-register-model')
    implementation project(':fees-register-api-contract')

    implementation group: 'com.github.hmcts', name: 'auth-checker-lib', version: '3.1.1'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'joda-time', name: 'joda-time', version: '2.13.0'
    implementation (group: 'org.postgresql', name: 'postgresql', version: '42.7.4') {
        exclude(module: 'commons-logging')
        exclude(module: 'slf4j-simple')
    }
    implementation group: 'org.liquibase', name: 'liquibase-core'
    implementation group: 'org.springframework.boot', name: 'spring-boot-devtools'
    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
        exclude(module: 'commons-logging')
    }
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '6.3.3'
    testImplementation group: 'org.hsqldb', name: 'hsqldb', version: '2.7.4'
    testImplementation group: 'io.rest-assured', name: 'rest-assured'
    testImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    integrationTestImplementation project(':fees-register-model')
    integrationTestImplementation project(':fees-register-api-contract')
    integrationTestImplementation sourceSets.test.runtimeClasspath


    testImplementation 'io.github.openfeign:feign-jackson:13.5'
    // smoke
    smokeTestImplementation sourceSets.test.runtimeClasspath
    // functional
    functionalTestImplementation sourceSets.test.runtimeClasspath
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-cucumber', version: versions.serenityCucumber
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity

    contractTestImplementation sourceSets.test.runtimeClasspath
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'spring', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5spring', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
    contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    contractTestImplementation("org.junit.jupiter:junit-jupiter-api:5.10.2")
    contractTestImplementation("org.junit.jupiter:junit-jupiter-engine:5.10.2")
    contractTestImplementation('org.junit.jupiter:junit-jupiter-api:5.10.2')

    implementation group: 'org.pitest', name: 'pitest', version: versions.pitest

    implementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
}

test {
    // Base test class for other tests - has no runnable test methods
    exclude '**/ComponentTestBase*'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-parameters'
}

task smokeTest(type: Test, description: 'Runs the smoke tests', group: 'Verification') {
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

task integrationTest(type: Test) {
    description = "Runs integration tests"
    group = "Verification"
    include "uk/gov/hmcts/fees2/register/api/controllers/**"
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    failFast = true
}

task functionalTest(type: Test, description: 'Runs the smoke functional', group: 'Verification') {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    finalizedBy aggregate
}

task runProviderPactVerification(type: Test) {
    logger.lifecycle("Runs pact provider Tests")
    systemProperty 'pact.verifier.publishResults','true'
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
}

task providerContractTest(type: Test) {
    logger.lifecycle("Running contract provider Tests")
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    systemProperty 'pact.rootDir', "pacts"
    if (project.hasProperty('pact.verifier.publishResults')) {
        systemProperty 'pact.verifier.publishResults', project.property('pact.verifier.publishResults')
    }
    systemProperty 'pact.provider.version', project.pactVersion

}

runProviderPactVerification.dependsOn providerContractTest

runProviderPactVerification.finalizedBy pactVerify

functionalTest.finalizedBy(aggregate)

serenity {
    reports = ["single-page-html"]
}

pitest {
    targetClasses = ['uk.gov.hmcts.fees.register.api.*']
    excludedClasses = ['uk.gov.hmcts.fees.register.api.config.*']
    threads = 10
    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
    outputFormats = ['XML', 'HTML']
    timestampedReports = true
    mutationThreshold = 50
}
